- name: Deploy Helm chart
  community.kubernetes.k8s:
    state: "{{ openhab_state }}"
    namespace: "{{ openhab_namespace }}"
    resource_definition:
      apiVersion: helm.cattle.io/v1
      kind: HelmChart
      metadata:
        name: openhab
      spec:
        chart: openhab
        repo: https://jamesgoodhouse.github.io/helm-charts
        version: "{{ openhab_helm_chart_version | mandatory }}"
        valuesContent: |-
          ingressroute:
            enabled: true
            host: openhab.home.goodhouse.io
            tls:
              secretName: openhab.home.goodhouse.io

          securityContext:
            privileged: true # to allow bluetooth and zstick access, might be able to be scoped down some

          server:
            settings:
              extraJavaOpts: "-Duser.timezone=America/Los_Angeles -Dgnu.io.rxtx.SerialPorts=/dev/ttyUSB0:/dev/ttyUSB1"
              cryptoPolicy: unlimited

          extraEnvironmentVars:
            # EXTRA_JAVA_OPTS: "-Duser.timezone=America/Los_Angeles -Dgnu.io.rxtx.SerialPorts=/dev/ttyUSB0:/dev/ttyUSB1"
            TZ: America/Los_Angeles
            # CRYPTO_POLICY: unlimited
            # OPENHAB_HTTP_PORT: "8081"
            # DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/run/dbus/system_bus_socket"

          # to allow bluetooth access
          # hostNetwork: true
          # dnsPolicy: ClusterFirstWithHostNet

          initContainers:
          - name: init-openhab
            image: busybox:latest
            imagePullPolicy: Always
            command:
            - sh
            - -c
            - |
              while [ ! $(ls /final_configs | wc -l) -gt 0 ]; do
                echo 'no configs found; waiting 5s'
                sleep 5
              done
              echo 'configs found; starting'
            volumeMounts:
            - name: openhab
              mountPath: /final_configs
              subPath: conf
              readOnly: true

          volumeMounts:
          - name: zstick-zwave
            mountPath: /dev/ttyUSB0
          - name: zstick-zigbee
            mountPath: /dev/ttyUSB1
          - name: openhab
            mountPath: /openhab/conf
            subPath: conf
          - name: openhab
            mountPath: /openhab/addons
            subPath: addons
          - name: openhab
            mountPath: /openhab/userdata
            subPath: userdata
          - name: tz-config
            mountPath: /etc/localtime
            readOnly: true

          volumes:
          - name: openhab
            persistentVolumeClaim:
              claimName: openhab
          - name: zstick-zwave
            hostPath:
              path: /dev/ttyUSB0
          - name: zstick-zigbee
            hostPath:
              path: /dev/ttyUSB1
          - name: tz-config
            hostPath:
              path: /usr/share/zoneinfo/America/Los_Angeles
              type: File

          configBuilder:
            configsRepoURL: https://github.com/jamesgoodhouse/openhab-configs.git
            image:
              tag: "{{ openhab_config_builder_version }}"

            volumeMounts:
            - name: age-key
              mountPath: /age
              readOnly: true
            - name: openhab
              mountPath: /final_configs
              subPath: conf
            - name: openhab
              mountPath: /configs_repo
              subPath: conf-repo

            volumes:
            - name: openhab
              persistentVolumeClaim:
                claimName: openhab
            - name: age-key
              secret:
                secretName: config-builder-age-key

            # envFrom:
            # - secretRef:
            #     name: influxdb-auth

- name: Deploy Certificate
  community.kubernetes.k8s:
    state: "{{ openhab_state }}"
    namespace: "{{ openhab_namespace }}"
    resource_definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: openhab.home.goodhouse.io
      spec:
        dnsNames:
        - openhab.home.goodhouse.io
        secretName: openhab.home.goodhouse.io
        issuerRef:
          name: "{{ openhab_certificate_issuer }}"
          kind: ClusterIssuer

- name: Deploy Secret
  community.kubernetes.k8s:
    state: "{{ openhab_state }}"
    namespace: "{{ openhab_namespace }}"
    resource_definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: config-builder-age-key
      type: Opaque
      data:
        key.txt: "{{ (openhab_config_builder_age_key | mandatory) | b64encode }}"
